service: shop-backend-serverless

frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: eu-central-1

  httpApi:
    cors: true

  environment:
    PRODUCTS_TABLE:
      Ref: productsTable
    STOCK_TABLE:
      Ref: stockTable
    CATALOG_ITEMS_QUEUE:
      Ref: catalogItemsQueue

  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "dynamodb:Scan"
            - "dynamodb:GetItem"
            - "dynamodb:PutItem"
          Resource:
            - Fn::GetAtt: [productsTable, Arn]
            - Fn::GetAtt: [stockTable, Arn]

functions:
  getProductsList:
    handler: handler.getProductsList
    events:
      - httpApi:
          path: /products
          method: get
  getProductsById:
    handler: handler.getProductsById
    events:
      - httpApi:
          path: /products/{productId}
          method: get
  createProduct:
    handler: handler.createProduct
    events:
      - httpApi:
          path: /products
          method: post
  catalogBatchProcess:
    handler: handler.catalogBatchProcess
    events:
      - sqs:
          arn:
            Fn::GetAtt: [catalogItemsQueue, Arn]
          batchSize: 5

resources:
  Resources:
    productsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: products
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    stockTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: stock
        AttributeDefinitions:
          - AttributeName: product_id
            AttributeType: S
        KeySchema:
          - AttributeName: product_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    catalogItemsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: catalogItems

  Outputs:
    CatalogItemsQueueArn:
      Value:
        Fn::GetAtt: [catalogItemsQueue, Arn]
      Export:
        Name: CatalogItemsQueueArn
    CatalogItemsQueueUrl:
      Value:
        Fn::GetAtt: [catalogItemsQueue, QueueUrl]
      Export:
        Name: CatalogItemsQueueUrl
